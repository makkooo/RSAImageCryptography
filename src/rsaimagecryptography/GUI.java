package rsaimagecryptography;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class GUI extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final javax.swing.JFileChooser IMGFileChooser, TXTFileChooser;
    private java.awt.image.BufferedImage img, decryptedImg;
    private java.io.File imgFile;
    private int p, q, n, phi, e, d;
    private int[] imgArr;
    private int[] encryptedIntArr;
    private int[] loadedIntArr;
    private int[] decryptedIntArr;
    private byte[] decryptedByteArr;
    RSAAlgorithm rsa = new RSAAlgorithm();
    RSAUtil rsaUtil = new RSAUtil();
    
    public GUI() {    
        initComponents();
        setLocationRelativeTo(null);
        IMGFileChooser = new javax.swing.JFileChooser();
        IMGFileChooser.setCurrentDirectory(new java.io.File(System.getProperty("user.home") + "\\Downloads"));
        IMGFileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Images", "jpg", "png"));
        
        TXTFileChooser = new javax.swing.JFileChooser();
        TXTFileChooser.setCurrentDirectory(new java.io.File(System.getProperty("user.home") + "\\Downloads"));
        TXTFileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt"));
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        splitPane = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        srcPanel = new javax.swing.JPanel();
        srcTF = new javax.swing.JTextField();
        openBtn = new javax.swing.JButton();
        imagePanel = new javax.swing.JPanel();
        imgBox = new javax.swing.JLabel();
        propPanel = new javax.swing.JPanel();
        fileNameLbl = new javax.swing.JLabel();
        fileResLbl = new javax.swing.JLabel();
        fileSizeLbl = new javax.swing.JLabel();
        rightPanel = new javax.swing.JTabbedPane();
        ecryptTab = new javax.swing.JPanel();
        loadEncryptBtn = new javax.swing.JButton();
        rsaEnPanel = new javax.swing.JPanel();
        pnPLbl = new javax.swing.JLabel();
        pnPTF = new javax.swing.JTextField();
        pnPErrorLbl = new javax.swing.JLabel();
        pnQLbl = new javax.swing.JLabel();
        pnQTF = new javax.swing.JTextField();
        pnQErrorLbl = new javax.swing.JLabel();
        encrpyBtn = new javax.swing.JButton();
        clearEnBtn = new javax.swing.JButton();
        privateKeyPanel = new javax.swing.JPanel();
        noteLbl = new javax.swing.JLabel();
        pkLbl = new javax.swing.JLabel();
        pkTF = new javax.swing.JTextField();
        saveFilePanel = new javax.swing.JPanel();
        saveEnTF = new javax.swing.JTextField();
        saveEnBtn = new javax.swing.JButton();
        decryptTab = new javax.swing.JPanel();
        encryptedTxtSrcPanel = new javax.swing.JPanel();
        enSrcTF = new javax.swing.JTextField();
        openDecryptBtn = new javax.swing.JButton();
        loadDecryptBtn = new javax.swing.JButton();
        rsaDePanel = new javax.swing.JPanel();
        pkDLbl = new javax.swing.JLabel();
        pkDTF = new javax.swing.JTextField();
        pkDErrorLbl = new javax.swing.JLabel();
        pkNLbl = new javax.swing.JLabel();
        pkNTF = new javax.swing.JTextField();
        pkNErrorLbl = new javax.swing.JLabel();
        decryptBtn = new javax.swing.JButton();
        clearDeBtn = new javax.swing.JButton();
        saveFilePanel1 = new javax.swing.JPanel();
        saveDeTF = new javax.swing.JTextField();
        saveDeBtn = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RSA Image Cryptography");
        setLocationByPlatform(true);
        setName("frame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(805, 590));

        splitPane.setDividerLocation(450);
        splitPane.setDividerSize(5);
        splitPane.setPreferredSize(new java.awt.Dimension(800, 600));

        leftPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        leftPanel.setPreferredSize(new java.awt.Dimension(445, 585));

        srcPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Image Source"));

        srcTF.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        srcTF.setText("C:\\");
        srcTF.setEnabled(false);

        openBtn.setText("Open");
        openBtn.setFocusPainted(false);
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout srcPanelLayout = new javax.swing.GroupLayout(srcPanel);
        srcPanel.setLayout(srcPanelLayout);
        srcPanelLayout.setHorizontalGroup(
            srcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(srcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(srcTF, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addGap(8, 8, 8)
                .addComponent(openBtn)
                .addContainerGap())
        );
        srcPanelLayout.setVerticalGroup(
            srcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, srcPanelLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(srcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(openBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(srcTF))
                .addGap(24, 24, 24))
        );

        imagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Image"));

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addComponent(imgBox, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addContainerGap())
        );

        propPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Properties"));

        fileNameLbl.setText("File Name:");

        fileResLbl.setText("Image Resolution:");

        fileSizeLbl.setText("File Size:");

        javax.swing.GroupLayout propPanelLayout = new javax.swing.GroupLayout(propPanel);
        propPanel.setLayout(propPanelLayout);
        propPanelLayout.setHorizontalGroup(
            propPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(propPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileNameLbl)
                    .addComponent(fileResLbl)
                    .addComponent(fileSizeLbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        propPanelLayout.setVerticalGroup(
            propPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propPanelLayout.createSequentialGroup()
                .addComponent(fileNameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileResLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileSizeLbl))
        );

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(srcPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(propPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(srcPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(propPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        splitPane.setLeftComponent(leftPanel);

        rightPanel.setFocusable(false);
        rightPanel.setPreferredSize(new java.awt.Dimension(340, 585));
        rightPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rightPanelMousePressed(evt);
            }
        });

        ecryptTab.setFocusable(false);

        loadEncryptBtn.setText("Load Image for Encryption");
        loadEncryptBtn.setEnabled(false);
        loadEncryptBtn.setFocusPainted(false);
        loadEncryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadEncryptBtnActionPerformed(evt);
            }
        });

        rsaEnPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("RSA"));
        rsaEnPanel.setEnabled(false);

        pnPLbl.setText("<html><span style=\\\"font-family:Dialog;font-size:9px;\\\">Prime Number </span><i>p </i></html>");
        pnPLbl.setEnabled(false);

        pnPTF.setToolTipText("");
        pnPTF.setEnabled(false);

        pnPErrorLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
        pnPErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        pnPErrorLbl.setEnabled(false);

        pnQLbl.setText("<html><span style=\\\"font-family:Dialog;font-size:9px;\\\">Prime Number </span><i>q </i></html>");
        pnQLbl.setEnabled(false);

        pnQTF.setEnabled(false);

        pnQErrorLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
        pnQErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        pnQErrorLbl.setEnabled(false);

        encrpyBtn.setText("Encrypt");
        encrpyBtn.setEnabled(false);
        encrpyBtn.setFocusPainted(false);
        encrpyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encrpyBtnActionPerformed(evt);
            }
        });

        clearEnBtn.setText("Clear");
        clearEnBtn.setEnabled(false);
        clearEnBtn.setFocusPainted(false);
        clearEnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearEnBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rsaEnPanelLayout = new javax.swing.GroupLayout(rsaEnPanel);
        rsaEnPanel.setLayout(rsaEnPanelLayout);
        rsaEnPanelLayout.setHorizontalGroup(
            rsaEnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rsaEnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rsaEnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rsaEnPanelLayout.createSequentialGroup()
                        .addGap(0, 136, Short.MAX_VALUE)
                        .addComponent(encrpyBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearEnBtn))
                    .addComponent(pnQTF)
                    .addComponent(pnQErrorLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnPTF)
                    .addComponent(pnPErrorLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(rsaEnPanelLayout.createSequentialGroup()
                        .addGroup(rsaEnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnQLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnPLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rsaEnPanelLayout.setVerticalGroup(
            rsaEnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rsaEnPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnPLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPErrorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnQLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnQTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnQErrorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(rsaEnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encrpyBtn)
                    .addComponent(clearEnBtn))
                .addContainerGap())
        );

        privateKeyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Private Key"));

        noteLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
        noteLbl.setForeground(new java.awt.Color(255, 0, 0));
        noteLbl.setText("Note: Private Keys are required for decrypting the image");

        pkLbl.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        pkLbl.setText("(d, n):");

        pkTF.setEnabled(false);

        javax.swing.GroupLayout privateKeyPanelLayout = new javax.swing.GroupLayout(privateKeyPanel);
        privateKeyPanel.setLayout(privateKeyPanelLayout);
        privateKeyPanelLayout.setHorizontalGroup(
            privateKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(privateKeyPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(pkLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pkTF, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, privateKeyPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(noteLbl)
                .addGap(15, 15, 15))
        );
        privateKeyPanelLayout.setVerticalGroup(
            privateKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(privateKeyPanelLayout.createSequentialGroup()
                .addComponent(noteLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(privateKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pkLbl)
                    .addComponent(pkTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        saveFilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Save File"));

        saveEnTF.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        saveEnTF.setText("C:\\");
        saveEnTF.setEnabled(false);

        saveEnBtn.setText("Save");
        saveEnBtn.setEnabled(false);
        saveEnBtn.setFocusPainted(false);
        saveEnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEnBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout saveFilePanelLayout = new javax.swing.GroupLayout(saveFilePanel);
        saveFilePanel.setLayout(saveFilePanelLayout);
        saveFilePanelLayout.setHorizontalGroup(
            saveFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveEnTF, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveEnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        saveFilePanelLayout.setVerticalGroup(
            saveFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveFilePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(saveFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveEnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveEnBtn))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ecryptTabLayout = new javax.swing.GroupLayout(ecryptTab);
        ecryptTab.setLayout(ecryptTabLayout);
        ecryptTabLayout.setHorizontalGroup(
            ecryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ecryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(saveFilePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(privateKeyPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rsaEnPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadEncryptBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        ecryptTabLayout.setVerticalGroup(
            ecryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecryptTabLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(loadEncryptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rsaEnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(privateKeyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveFilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        rightPanel.addTab("Encrypt Image", ecryptTab);

        decryptTab.setFocusable(false);

        encryptedTxtSrcPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Encrypted Text Source"));
        encryptedTxtSrcPanel.setPreferredSize(new java.awt.Dimension(300, 230));

        enSrcTF.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        enSrcTF.setText("C:\\");
        enSrcTF.setEnabled(false);

        openDecryptBtn.setText("Open");
        openDecryptBtn.setFocusPainted(false);
        openDecryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openDecryptBtnActionPerformed(evt);
            }
        });

        loadDecryptBtn.setText("Load Text File For Decryption");
        loadDecryptBtn.setEnabled(false);
        loadDecryptBtn.setFocusPainted(false);
        loadDecryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDecryptBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout encryptedTxtSrcPanelLayout = new javax.swing.GroupLayout(encryptedTxtSrcPanel);
        encryptedTxtSrcPanel.setLayout(encryptedTxtSrcPanelLayout);
        encryptedTxtSrcPanelLayout.setHorizontalGroup(
            encryptedTxtSrcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encryptedTxtSrcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encryptedTxtSrcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadDecryptBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(encryptedTxtSrcPanelLayout.createSequentialGroup()
                        .addComponent(enSrcTF, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openDecryptBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        encryptedTxtSrcPanelLayout.setVerticalGroup(
            encryptedTxtSrcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encryptedTxtSrcPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(encryptedTxtSrcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enSrcTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openDecryptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(loadDecryptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        rsaDePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("RSA"));
        rsaDePanel.setEnabled(false);

        pkDLbl.setText("<html><span style=\\\"font-family:Dialog;font-size:9px;\\\">Private Key </span><i>d </i></html>");
        pkDLbl.setEnabled(false);

        pkDTF.setToolTipText("");
        pkDTF.setEnabled(false);

        pkDErrorLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
        pkDErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        pkDErrorLbl.setEnabled(false);

        pkNLbl.setText("<html><span style=\\\"font-family:Dialog;font-size:9px;\\\">Private Key </span><i>n </i></html>");
        pkNLbl.setEnabled(false);

        pkNTF.setEnabled(false);

        pkNErrorLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
        pkNErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        pkNErrorLbl.setEnabled(false);

        decryptBtn.setText("Decrypt");
        decryptBtn.setEnabled(false);
        decryptBtn.setFocusPainted(false);
        decryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptBtnActionPerformed(evt);
            }
        });

        clearDeBtn.setText("Clear");
        clearDeBtn.setEnabled(false);
        clearDeBtn.setFocusPainted(false);
        clearDeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rsaDePanelLayout = new javax.swing.GroupLayout(rsaDePanel);
        rsaDePanel.setLayout(rsaDePanelLayout);
        rsaDePanelLayout.setHorizontalGroup(
            rsaDePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rsaDePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rsaDePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rsaDePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(decryptBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearDeBtn))
                    .addComponent(pkNTF)
                    .addComponent(pkNErrorLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pkDTF)
                    .addComponent(pkDErrorLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(rsaDePanelLayout.createSequentialGroup()
                        .addGroup(rsaDePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pkNLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pkDLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rsaDePanelLayout.setVerticalGroup(
            rsaDePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rsaDePanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(pkDLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pkDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pkDErrorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pkNLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pkNTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pkNErrorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(rsaDePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decryptBtn)
                    .addComponent(clearDeBtn))
                .addContainerGap())
        );

        saveFilePanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Save File"));

        saveDeTF.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        saveDeTF.setText("C:\\");
        saveDeTF.setEnabled(false);

        saveDeBtn.setText("Save");
        saveDeBtn.setEnabled(false);
        saveDeBtn.setFocusPainted(false);
        saveDeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout saveFilePanel1Layout = new javax.swing.GroupLayout(saveFilePanel1);
        saveFilePanel1.setLayout(saveFilePanel1Layout);
        saveFilePanel1Layout.setHorizontalGroup(
            saveFilePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveFilePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveDeTF, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveDeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        saveFilePanel1Layout.setVerticalGroup(
            saveFilePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveFilePanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(saveFilePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveDeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveDeBtn))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout decryptTabLayout = new javax.swing.GroupLayout(decryptTab);
        decryptTab.setLayout(decryptTabLayout);
        decryptTabLayout.setHorizontalGroup(
            decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rsaDePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveFilePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(encryptedTxtSrcPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        decryptTabLayout.setVerticalGroup(
            decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(encryptedTxtSrcPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rsaDePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveFilePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        rightPanel.addTab("Decrpyt Image", decryptTab);

        splitPane.setRightComponent(rightPanel);

        getContentPane().add(splitPane, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        int returnVal = IMGFileChooser.showOpenDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION){
            loadEncryptBtn.setEnabled(true);
            
            try{
                imgFile = IMGFileChooser.getSelectedFile();
                img = ImageIO.read(imgFile);
                srcTF.setText(imgFile.getAbsolutePath()); 
                fileNameLbl.setText("File Name: " + imgFile.getName());
                fileResLbl.setText("Image Resolution : " + img.getWidth() + " x " + img.getHeight());
                fileSizeLbl.setText("File Size: " + String.format("%.2f", ((float)(imgFile.length())/1024)) + "KB");
                ImageIcon imgIcon = new ImageIcon(img);
                Image imgFit = imgIcon.getImage().getScaledInstance(imgBox.getWidth(), imgBox.getHeight(), Image.SCALE_SMOOTH);
                imgBox.setIcon(new ImageIcon(imgFit));
            }
            catch(IOException ioe){
                JOptionPane.showMessageDialog(null, "Failed to load file.", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No file chosen.", "Error", JOptionPane.WARNING_MESSAGE); 
            imgBox.setIcon(null);
            fileNameLbl.setText("File Name: ");
            fileResLbl.setText("Image Resolution : ");
            fileSizeLbl.setText("File Size: ");
            loadEncryptBtn.setEnabled(false);
        }
    }//GEN-LAST:event_openBtnActionPerformed

    private void loadEncryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadEncryptBtnActionPerformed
        try {
            imgArr = rsaUtil.convertByteToInt(img);
            openBtn.setEnabled(false);
            setPanelEnabled(rsaEnPanel, true);
        } 
        catch (IOException ioe) {
            JOptionPane.showMessageDialog(null, "Error Converting Image to Byte Array", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_loadEncryptBtnActionPerformed

    private void encrpyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encrpyBtnActionPerformed
        loadEncryptBtn.setEnabled(false);
        try {
            if(rsaUtil.isPrime(Integer.parseInt(pnPTF.getText()))) {
                pnPErrorLbl.setText(null);
                p = Integer.parseInt(pnPTF.getText());
            }
            else{
                pnPTF.setText(null);
                pnPErrorLbl.setText("Please Enter a Prime Number");
            }
        }
        catch (NumberFormatException nfe){
            pnPTF.setText(null);
            pnPErrorLbl.setText("Invalid Input!");
        }
        
        try {
            if(rsaUtil.isPrime(Integer.parseInt(pnQTF.getText()))) {
                pnQErrorLbl.setText(null);
                q = Integer.parseInt(pnQTF.getText());
            }
            else{
                pnQTF.setText(null);
                pnQErrorLbl.setText("Please Enter a Prime Number");
            }
        }
        catch (NumberFormatException nfe){
            pnQTF.setText(null);
            pnQErrorLbl.setText("Invalid Input!");
        }
        
        n = rsa.n_val(p, q);
        phi = rsa.phi_val(p, q);
        e = rsa.e_val(phi);
        d = rsa.d_val(e, phi);
        
        pkTF.setText(String.valueOf(d) + ", " + String.valueOf(n));
        
        encryptedIntArr = rsa.encrypt(imgArr, e, n);
        
        //try {
		//	byte[] encryptedByteArr = rsaUtil.convertIntToByte(encryptedIntArr);
		//	BitmapEncoder.encodeToBitmap(encryptedByteArr, new File("C:\\Users\\Mark\\Desktop\\output.bmp"));
		//} catch (IOException e1) {
		//	e1.printStackTrace();
		//}
        
        JOptionPane.showMessageDialog(null, "Image encrypted successfully.");
        saveEnBtn.setEnabled(true);
        setPanelEnabled(rsaEnPanel, false);
    }//GEN-LAST:event_encrpyBtnActionPerformed

    private void saveEnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEnBtnActionPerformed
        int returnVal = TXTFileChooser.showSaveDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            try{
                java.io.PrintWriter writer = new java.io.PrintWriter(TXTFileChooser.getSelectedFile() + ".txt");
                for (int i = 0; i < encryptedIntArr.length; i++) {
                    if(i%20==0 && i!=0)
                        writer.println();
                    writer.print(encryptedIntArr[i] + "\t" );
                }
                writer.close();
                JOptionPane.showMessageDialog(null, "File saved successfully.");
                openBtn.setEnabled(true);
                clearEnBtnActionPerformed(evt);
                saveEnBtn.setEnabled(false);
                imgBox.setIcon(null);
                fileNameLbl.setText("File Name: ");
                fileResLbl.setText("Image Resolution : ");
                fileSizeLbl.setText("File Size: ");
            }
            catch(IOException ioe){
                JOptionPane.showMessageDialog(null, "Failed to save file.", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "File not saved.", "Error", JOptionPane.WARNING_MESSAGE); 
    }//GEN-LAST:event_saveEnBtnActionPerformed

    private void clearEnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearEnBtnActionPerformed
        p = 0;
        q = 0;
        pnPTF.setText(null);
        pnPErrorLbl.setText(null);
        pnQTF.setText(null);
        pnQErrorLbl.setText(null);
        pkTF.setText(null);
    }//GEN-LAST:event_clearEnBtnActionPerformed

    private void openDecryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDecryptBtnActionPerformed
        int returnVal = TXTFileChooser.showOpenDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION){
            loadDecryptBtn.setEnabled(true);
            enSrcTF.setText(TXTFileChooser.getSelectedFile().getAbsolutePath());
            
            try {
                java.util.Scanner s1 = new java.util.Scanner(new java.io.FileReader(TXTFileChooser.getSelectedFile()));
                int ctr = 0;
                while(s1.hasNextInt()){
                    ctr++;
                    s1.nextInt();
                }
                loadedIntArr = new int[ctr];
                        
                java.util.Scanner s2 = new java.util.Scanner(new java.io.FileReader(TXTFileChooser.getSelectedFile()));
                for(int i=0; i<loadedIntArr.length; i++)
                    loadedIntArr[i] = s2.nextInt();
            }   
            catch(IOException ioe){
                JOptionPane.showMessageDialog(null, "Failed to load file!", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
        else {
        	JOptionPane.showMessageDialog(null, "No file chosen.", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_openDecryptBtnActionPerformed

    private void loadDecryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDecryptBtnActionPerformed
        openDecryptBtn.setEnabled(false);
        setPanelEnabled(rsaDePanel, true);
        loadDecryptBtn.setEnabled(false);
    }//GEN-LAST:event_loadDecryptBtnActionPerformed

    private void decryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptBtnActionPerformed
        try {
            pkDErrorLbl.setText(null);
            d = Integer.parseInt(pkDTF.getText());
        }
        catch (NumberFormatException nfe){
            pkDTF.setText(null);
            pkDErrorLbl.setText("Invalid Input!");
        }
        
        try {
            pkNErrorLbl.setText(null);
            n = Integer.parseInt(pkNTF.getText());
        }
        catch (NumberFormatException nfe){
            pkNTF.setText(null);
            pkNErrorLbl.setText("Invalid Input!");
        }
        
        decryptedIntArr = rsa.decrypt(loadedIntArr, d, n);
        try {
            decryptedByteArr = rsaUtil.convertIntToByte(decryptedIntArr);
        } 
        catch (IOException ioe) {}
        
        try {
            decryptedImg = rsaUtil.convertByteToImage(decryptedByteArr);
        } 
        catch (IOException ioe) {}
        
        ImageIcon decryptedImgIcon = new ImageIcon(decryptedImg);
        Image decryptedImgFit = decryptedImgIcon.getImage().getScaledInstance(imgBox.getWidth(), imgBox.getHeight(), Image.SCALE_SMOOTH);
        imgBox.setIcon(new ImageIcon(decryptedImgFit));
        
        saveDeBtn.setEnabled(true);
        setPanelEnabled(rsaDePanel, false);
    }//GEN-LAST:event_decryptBtnActionPerformed

    private void saveDeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDeBtnActionPerformed
        int returnVal = IMGFileChooser.showSaveDialog(this);
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            try{
                ImageIO.write(decryptedImg, "png", new java.io.File(IMGFileChooser.getSelectedFile() + ".png"));
                JOptionPane.showMessageDialog(null, "File saved successfully.");
                openDecryptBtn.setEnabled(true);
                clearDeBtnActionPerformed(evt);
                saveDeBtn.setEnabled(false);
                imgBox.setIcon(null);
            }
            catch(IOException ioe){
                JOptionPane.showMessageDialog(null, "Failed to save file.", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "File not saved.", "Error", JOptionPane.WARNING_MESSAGE); 
    }//GEN-LAST:event_saveDeBtnActionPerformed

    private void clearDeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDeBtnActionPerformed
        d = 0;
        n = 0;
        pkDTF.setText(null);
        pkDErrorLbl.setText(null);
        pkNTF.setText(null);
        pkNErrorLbl.setText(null);
    }//GEN-LAST:event_clearDeBtnActionPerformed

    private void rightPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightPanelMousePressed
        if (rightPanel.getSelectedIndex() == 1) {
            openBtn.setEnabled(false);
         }
        else {
            openBtn.setEnabled(true);
        }
    }//GEN-LAST:event_rightPanelMousePressed

    void setPanelEnabled(javax.swing.JPanel panel, Boolean isEnabled) {
        panel.setEnabled(isEnabled);

        java.awt.Component[] components = panel.getComponents();

        for (java.awt.Component component : components) {
            if (component instanceof javax.swing.JPanel) {
                setPanelEnabled((javax.swing.JPanel) component, isEnabled);
            }
        component.setEnabled(isEnabled);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearDeBtn;
    private javax.swing.JButton clearEnBtn;
    private javax.swing.JButton decryptBtn;
    private javax.swing.JPanel decryptTab;
    private javax.swing.JPanel ecryptTab;
    private javax.swing.JTextField enSrcTF;
    private javax.swing.JButton encrpyBtn;
    private javax.swing.JPanel encryptedTxtSrcPanel;
    private javax.swing.JLabel fileNameLbl;
    private javax.swing.JLabel fileResLbl;
    private javax.swing.JLabel fileSizeLbl;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel imgBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JButton loadDecryptBtn;
    private javax.swing.JButton loadEncryptBtn;
    private javax.swing.JLabel noteLbl;
    private javax.swing.JButton openBtn;
    private javax.swing.JButton openDecryptBtn;
    private javax.swing.JLabel pkDErrorLbl;
    private javax.swing.JLabel pkDLbl;
    private javax.swing.JTextField pkDTF;
    private javax.swing.JLabel pkLbl;
    private javax.swing.JLabel pkNErrorLbl;
    private javax.swing.JLabel pkNLbl;
    private javax.swing.JTextField pkNTF;
    private javax.swing.JTextField pkTF;
    private javax.swing.JLabel pnPErrorLbl;
    private javax.swing.JLabel pnPLbl;
    private javax.swing.JTextField pnPTF;
    private javax.swing.JLabel pnQErrorLbl;
    private javax.swing.JLabel pnQLbl;
    private javax.swing.JTextField pnQTF;
    private javax.swing.JPanel privateKeyPanel;
    private javax.swing.JPanel propPanel;
    private javax.swing.JTabbedPane rightPanel;
    private javax.swing.JPanel rsaDePanel;
    private javax.swing.JPanel rsaEnPanel;
    private javax.swing.JButton saveDeBtn;
    private javax.swing.JTextField saveDeTF;
    private javax.swing.JButton saveEnBtn;
    private javax.swing.JTextField saveEnTF;
    private javax.swing.JPanel saveFilePanel;
    private javax.swing.JPanel saveFilePanel1;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel srcPanel;
    private javax.swing.JTextField srcTF;
    // End of variables declaration//GEN-END:variables
}